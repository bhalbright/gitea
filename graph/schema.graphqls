interface Node {
    id: ID!
}

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: String
    endCursor: String
}

type Repository implements Node {
    id: ID!
    rest_api_id: Int,
    name: String
    fullName: String
    collaborators(
        first: Int,
        after: String,
        last: Int,
        before: String
    ): UserConnection
}

type User implements Node {
    id: ID!
    rest_api_id: Int,
    username: String
}

type UserConnection {
    pageInfo: PageInfo!
    totalCount: Int,
    edges: [UserEdge]
}

type UserEdge {
    cursor: String!
    node: User
}

type Query {
    repository(owner: String!, name: String!): Repository
    node(id: ID!): Node
}
